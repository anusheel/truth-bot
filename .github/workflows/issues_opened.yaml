name: Issue Opened - Call OpenAI

on:
  issues:
    types: [opened]

jobs:
  run-openai:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Clean install dependencies
        run: npm ci

      - name: Install dependencies
        run: npm install

      - name: Extract issue details
        id: issue
        run: |
          ISSUE_BODY=$(echo "${{ github.event.issue.body }}" | base64 | tr -d '\n' | tr -d '\r')
          echo "ISSUE_BODY=$ISSUE_BODY" >> $GITHUB_OUTPUT

      - name: Fetch PDF Attachment
        id: fetch_pdf
        run: |
          echo "${{ github.event.issue.body }}"
          ATTACHMENT_URL=$(echo "${{ github.event.issue.body }}" | grep -Eo 'https://[^ ]+\.pdf' || true)
          if [ -n "$ATTACHMENT_URL" ]; then
            echo "Found PDF URL: $ATTACHMENT_URL"
            curl -L "$ATTACHMENT_URL" --output issue.pdf || exit 1
            echo "PDF_PATH=issue.pdf" >> $GITHUB_OUTPUT
          else
            echo "No PDF URL found in the issue body."
            echo "PDF_PATH=" >> $GITHUB_OUTPUT
          fi

      - name: Build TypeScript
        run: npm run build

      - name: Call OpenAI
        id: openai_call
        run: |
          if [ -n "${{ steps.fetch_pdf.outputs.PDF_PATH }}" ]; then
            echo "PDF file path: ${{ steps.fetch_pdf.outputs.PDF_PATH }}"
            RESPONSE=$(node dist/call_openai.js \
              "${{ env.OPENAI_API_KEY }}" \
              "${{ steps.issue.outputs.ISSUE_BODY }}" \
              "${{ steps.fetch_pdf.outputs.PDF_PATH }}")
          else
            echo "No PDF file provided. Proceeding with prompt only."
            RESPONSE=$(node dist/call_openai.js \
              "${{ env.OPENAI_API_KEY }}" \
              "${{ steps.issue.outputs.ISSUE_BODY }}" "")
          fi
          echo "response=$RESPONSE" >> $GITHUB_OUTPUT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Comment on the issue
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.issue.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            **OpenAI Response:**
            ${{ steps.openai_call.outputs.response }}
